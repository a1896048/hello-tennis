create table public.system_settings (id uuid default uuid_generate_v4() primary key, registration_enabled boolean default true, match_creation_enabled boolean default true, maintenance_mode boolean default false, system_notice text default '', created_at timestamp with time zone default timezone('utc'::text, now()) not null, updated_at timestamp with time zone default timezone('utc'::text, now()) not null);
alter table public.system_settings enable row level security; create policy "Allow public read access" on public.system_settings for select using (true); create policy "Allow admin update" on public.system_settings for update using (auth.uid() in (select id from public.users where role = 'admin')); create policy "Allow admin insert" on public.system_settings for insert with check (auth.uid() in (select id from public.users where role = 'admin'));
create or replace function public.handle_updated_at() returns trigger as $$ begin new.updated_at = timezone('utc'::text, now()); return new; end; $$ language plpgsql; create trigger handle_updated_at before update on public.system_settings for each row execute procedure public.handle_updated_at();
